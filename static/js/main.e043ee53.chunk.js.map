{"version":3,"sources":["consts.js","components/ImageItem/index.js","components/ImageItem/ImageItem.js","components/ImageList/ImageList.js","components/ImageList/index.js","components/ImageModal/ImageModal.js","App.js","index.js","reducer.js"],"names":["TYPES","ImageItem","author","id","url","onImageClick","onClick","className","src","alt","ImageList","loadImages","props","imagesLoaded","currentPage","loadingFinished","axios","get","then","result","data","map","image","download_url","res","handleImageclick","targetImage","images","find","handleLoadMoreImages","this","loadingStarted","loading","key","Component","connect","activeImage","dispatch","payload","type","modalClosed","useEffect","document","body","style","overflow","App","globalStore","createStore","state","action","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","getElementById"],"mappings":"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","file":"static/js/main.e043ee53.chunk.js","sourcesContent":["export const TYPES = {\r\n    IMAGES_LOADED: 'IMAGES_LOADED',\r\n    IMAGE_CLICK: 'IMAGE_CLICK',\r\n    LOADING_STARTED: 'LOADING_STARTED',\r\n    LOADING_FINISHED: 'LOADING_FINISHED',\r\n    IMAGE_SELECTED: 'IMAGE_SELECTED',\r\n    MODAL_CLOSED: 'MODAL_CLOSED'\r\n}","import ImageItem from './ImageItem'\r\n\r\nexport default ImageItem;","import React from 'react';\r\n\r\nimport './ImageItem.css'\r\n\r\nexport const ImageItem = ({author, id, url, onImageClick }) => {\r\n\r\n    return (\r\n        <div onClick={() => onImageClick(id)} className=\"image-item\">\r\n            <div className=\"image-item__image\">\r\n                <img src={url} alt={\"Image by\" + author} />\r\n            </div>\r\n            <div className=\"image-item__foot\">\r\n                <p>{'Image by ' + author}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ImageItem;\r\n","import React, { Component } from 'react'\r\nimport ImageItem from '../ImageItem'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { TYPES } from '../../consts'\r\n\r\nimport './ImageList.css'\r\n\r\nclass ImageList extends Component {\r\n\r\n    loadImages = () => {\r\n        const { imagesLoaded, currentPage, loadingFinished } = this.props;\r\n        axios.get(`https://picsum.photos/v2/list?page=${currentPage}`)\r\n        .then(result => result.data.map( image => ({\r\n            id: image.id,\r\n            author: image.author,\r\n            url: image.download_url\r\n        })))\r\n        .then(res => {\r\n            imagesLoaded(res);\r\n            loadingFinished();\r\n        });\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.loadingStarted();\r\n        this.loadImages()              \r\n    }\r\n\r\n    handleImageclick = (id) => {    \r\n        const targetImage = this.props.images.find(image => image.id === id); \r\n        this.props.onImageClick(targetImage)\r\n    }\r\n\r\n    handleLoadMoreImages = () => {\r\n        const { imagesLoaded, currentPage } = this.props;\r\n        axios.get(`https://picsum.photos/v2/list?page=${currentPage}`)\r\n            .then(result => result.data.map( image => ({\r\n                id: image.id,\r\n                author: image.author,\r\n                url: image.download_url\r\n            }))).then(res => {\r\n                imagesLoaded(res);\r\n            });\r\n    }\r\n\r\n    \r\n    \r\n    render() {        \r\n        \r\n        \r\n        const { loading, images } = this.props;        \r\n       \r\n        if (loading) {\r\n            return (\r\n                <div className=\"image-list\">\r\n                    Images loading...\r\n                </div>\r\n            )\r\n        } else {\r\n\r\n            return (\r\n                <div className=\"image-list\">\r\n                    <ul className=\"image-list__list\">\r\n                        {images.map(({ id, author, url }) => (\r\n                            <li key={ id }>\r\n                                <ImageItem onImageClick={this.handleImageclick} id={id} author={ author } url={ url }/>\r\n                            </li>))\r\n                        }\r\n                    </ul>\r\n                    <button onClick={() => this.handleLoadMoreImages()} className=\"image-list_load\">Load more images</button>\r\n                </div>\r\n            )\r\n        }        \r\n        \r\n    \r\n    }\r\n}\r\n\r\nfunction mapStateToProps({images, currentPage, activeImage, loading}) {\r\n    return {\r\n        images,\r\n        currentPage,\r\n        activeImage,\r\n        loading\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        imagesLoaded: payload => dispatch({\r\n            type: TYPES.IMAGES_LOADED,\r\n            payload\r\n        }),\r\n        onImageClick: payload => dispatch({\r\n            type: TYPES.IMAGE_SELECTED,\r\n            payload\r\n        }),\r\n        loadingStarted: () => dispatch({\r\n            type: TYPES.LOADING_STARTED\r\n        }),\r\n        loadingFinished: () => dispatch({\r\n            type: TYPES.LOADING_FINISHED\r\n        }),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ImageList);\r\n\r\n","import ImageList from './ImageList'\r\n\r\nexport default ImageList;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { TYPES } from '../../consts';\r\n\r\nimport './ImageModal.css';\r\n\r\nconst ImageModal = ({ activeImage, modalClosed }) => {\r\n\r\n    useEffect(() => {\r\n        if (activeImage) {\r\n            document.body.style.overflow = 'hidden';\r\n\r\n        }\r\n\r\n        document.body.style.overflow = 'auto';\r\n    });\r\n\r\n\r\n\tif (activeImage) {\r\n\t\treturn (\r\n\t\t\t<div className=\"image-modal image-modal--active\">\r\n\t\t\t\t<div className=\"image-modal__container\">\r\n\t\t\t\t\t<div className=\"image-modal__image-container\">\r\n                        <img src={activeImage.url} alt={'Image by ' + activeImage.author} />\r\n                    </div>\r\n\t\t\t\t\t<span onClick={() => modalClosed()} className=\"image-modal__close\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t} return null\r\n};\r\n\r\nfunction mapStateToProps({ activeImage }) {\r\n\treturn {\r\n\t\tactiveImage\r\n\t};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\tmodalClosed: () => dispatch({\r\n            type: TYPES.MODAL_CLOSED\r\n        }),\r\n\t};\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageModal);\r\n","import React from 'react';\nimport ImageList from './components/ImageList'\n\nimport './App.css';\nimport ImageModal from './components/ImageModal/ImageModal';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ImageList />\n      <ImageModal/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux'\nimport reducer from './reducer'\nimport App from './App';\n\nconst initialState = {\n    images: [],\n    currentPage: 1,\n    activeImage: null,\n    loading: false\n}\n\nconst globalStore = createStore(\n    reducer, initialState,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n    <Provider store={globalStore}>\n        <App />\n    </Provider>, \ndocument.getElementById('root'));","import { TYPES } from './consts'\r\n\r\nexport default function reducer (state, action) {\r\n    switch(action.type) {\r\n        case TYPES.LOADING_STARTED: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case TYPES.LOADING_FINISHED: \r\n            return {\r\n                ...state,\r\n                loading: false,            }\r\n        \r\n        case TYPES.IMAGES_LOADED: \r\n            return {\r\n                ...state,\r\n                images: [...state.images, ...action.payload],\r\n                currentPage: state.currentPage + 1,\r\n            }\r\n        case TYPES.IMAGE_SELECTED: \r\n            return {\r\n                ...state,\r\n                activeImage: action.payload,\r\n            }\r\n        case TYPES.MODAL_CLOSED:\r\n            return {\r\n                ...state,\r\n                activeImage: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}"],"sourceRoot":""}